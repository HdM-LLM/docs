# User Instructions

Since we are using the large language model in a way, where there are no right or wrong answers, we can't use the the [evals framework](https://github.com/openai/evals) that is developed and maintained by OpenAI. Instead we chose a different method for evaluation. We took an existing job posting from Meta looking for a Frontend Developer, let ChatGPT (GPT-3.5) generate around 40 applications and then manually evaluated them. Afterwards we used GPT-4 to get the same 40 applications evaluated. To be able to compare the results we used the same evaluation categories as we used for the human evaluated applications. These categories are listed below. We also added guidelines wih examples for 0 and 10 points for each category to make the evaluation process as neutral as possible:

1. Education and degrees
   - 0: No formal education or relevant degree
   - 10: Ph.D. in Computer Science, Engineering, Applied Sciences, Mathematics, Physics, or related field with an exceptional academic record


2. JavaScript/Typescript Proficiency
    - 0: No knowledge or experience with JavaScript/Typescript
    - 10: Expert in JavaScript/Typescript, demonstrated by significant contributions to complex front-end systems and extensive experience in architectural design


3. HTML & CSS Skills
    -  0: Limited or no understanding of HTML & CSS.
    -  10: Mastery of HTML & CSS, with the ability to create efficient and visually appealing user interfaces


4. Framework Familiarity (e.g., Prototype JS, MooTools, Dojo)
    -  0: No experience with any JavaScript or TypeScript frameworks
    -  10: Extensive expertise in multiple Object-Oriented JavaScript Frameworks, such as Prototype JS, MooTools, or Dojo, and a proven ability to architect complex front-end systems


5. Automated Testing for Frontend Code
    - 0: No experience in implementing automated testing for frontend code
    - 10: Adept at implementing comprehensive automated testing strategies for front-end code, ensuring high performance and reliability


6. Collaboration and Code Reviews
    -  0: Poor collaboration skills and minimal participation in code reviews
    -  10: Exceptional collaboration skills, actively contributing to design and code reviews, and effectively incorporating innovations from team members


7. Teamwork
    -  0: Works in isolation, lacks teamwork skills
    -  10: Outstanding teamwork, demonstrated by effective interaction with product designers, and contributing to the overall improvement of the engineering team's performance